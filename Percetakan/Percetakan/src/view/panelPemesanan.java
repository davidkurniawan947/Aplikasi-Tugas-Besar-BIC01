/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import control.CustomerDAO;
import control.PegawaiDAO;
import control.PemesananDAO;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.Pegawai;
import model.Pemesanan;


/**
 *
 * @author MSI
 */
public class panelPemesanan extends javax.swing.JPanel implements ListSelectionListener{
    PemesananDAO daoPem;
    CustomerDAO daoCust;
    PegawaiDAO daoPeg;
    private Pemesanan pemesanan;
    DefaultTableModel dataPem;
    List<Customer> dataCustomer;
    List<Pegawai> dataPegawai;
    
    public panelPemesanan() {
        initComponents();
        daoPem = new PemesananDAO();
        daoPeg = new PegawaiDAO();
        daoCust = new CustomerDAO();
        dataPem = (DefaultTableModel) tablePem.getModel();
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        date = new com.toedter.calendar.JDateChooser();
        status = new javax.swing.JComboBox<>();
        idcust = new javax.swing.JComboBox<>();
        idpeg = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        del = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kelola Pesanan"));

        jLabel2.setText("ID Pemesanan");

        jLabel3.setText("Tgl Pemesanan");

        jLabel4.setText("Status Pemesanan");

        jLabel5.setText("ID Customer");

        jLabel6.setText("ID Pegawai");

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selesai", "On_Progres" }));

        idcust.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        idpeg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        del.setText("Delete");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(id)
                    .addComponent(idcust, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(idpeg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(del)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(idcust, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(idpeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(del))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipady = 322;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
        add(jPanel1, gridBagConstraints);

        tablePem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Pemesanan", "Tanggal Pemesanan", "Status Pemesanan", "ID Customer", "ID Pegawai"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 490;
        gridBagConstraints.ipady = 540;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 0, 12);
        add(jScrollPane1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Kelola Pemesanan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 265, 0, 0);
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        save();
    }//GEN-LAST:event_saveActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
       delete();
    }//GEN-LAST:event_delActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        reset();
    }//GEN-LAST:event_resetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton del;
    private javax.swing.JTextField id;
    private javax.swing.JComboBox<String> idcust;
    private javax.swing.JComboBox<String> idpeg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTable tablePem;
    // End of variables declaration//GEN-END:variables
    private void save() {
        if (pemesanan.getIdPemesanan() == null) {
            pemesanan.setIdPemesanan(id.getText().trim());
            pemesanan.setTanggalPemesanan(date.getDate());
            pemesanan.setStatusPemesanan(status.getSelectedItem().toString());
            pemesanan.setIdCustomer(dataCustomer.get(idcust.getSelectedIndex()));
            pemesanan.setIdPegawai(dataPegawai.get(idpeg.getSelectedIndex()));
            if (daoPem.insertData(pemesanan)) {
                JOptionPane.showMessageDialog(this, "Data Pemesanan berhasil ditambah!", "Information Message", 1);
                reset();
            } else {
                JOptionPane.showMessageDialog(this, "Data Pemesanan gagal ditambah!", "Warning Message", 2);
            } 
        } else {
            pemesanan.setIdPemesanan(id.getText().trim());
            pemesanan.setTanggalPemesanan(date.getDate());
            pemesanan.setStatusPemesanan(status.getSelectedItem().toString());
            if (daoPem.updateData(pemesanan)) {
                JOptionPane.showMessageDialog(this, "Data Pemesanan berhasil diubah!", "Information Message", 1);
                reset();
            } else {
            JOptionPane.showMessageDialog(this, "Data Pemesanan gagal diubah!", "Warning Message", 2);
            } 
        }
    }
  
    private void delete() {
        if (pemesanan.getIdCustomer() == null) {
            JOptionPane.showMessageDialog(this, "Data Pemesanan tidak ada!", "Warning Message", 2);
        } else if (pemesanan.getDetailPemesananList().isEmpty()) {
            if (JOptionPane.showConfirmDialog(this, "Apakah Anda akan menghapus Data Pemesanan?", "Confirmation Delete", 2, 3) == 0) {
                if (daoPem.deleteData(pemesanan)) {
                    JOptionPane.showMessageDialog(this, "Data Pemesanan berhasil dihapus!", "Information Message", 1);
                    reset();
                } else {
                    JOptionPane.showMessageDialog(this, "Data Pemesanan gagal dihapus!", "Warning Message", 2);
                } 
            } else {
                JOptionPane.showMessageDialog(this, "Data Pemesanan batal dihapus!", "Information Message", 1);
            } 
        } else {
            JOptionPane.showMessageDialog(this, "Data Pemesanan tidak dapat dihapus!", "Warning Message", 2);
        } 
    }
    public void reset() {
        pemesanan = new Pemesanan();
        id.setText("");
        date.setDate(null);
        status.setSelectedIndex(0);
        listPeg();
        idpeg.setSelectedIndex(0);
        listCust();
        idcust.setSelectedIndex(0);
        ShowPemesananList();
        save.setText("save");
    }
    
    private void ShowPemesananList() {
        tablePem.getSelectionModel().removeListSelectionListener(this);
        dataPem.getDataVector().removeAllElements();
        for (Pemesanan b : daoPem.getAllData()) {
            dataPem.addRow(new Object[]{
                b.getIdPemesanan(),
                b.getTanggalPemesanan(),
                b.getStatusPemesanan(),
                b.getIdCustomer(),
                b.getIdPegawai()
                        });
        } 
        tablePem.getSelectionModel().addListSelectionListener(this);
    }
    
    public void valueChanged(ListSelectionEvent e) {
        if (e.getSource() == this.tablePem.getSelectionModel())
            try {
                pemesanan = daoPem.getData(Integer.parseInt(tablePem.getValueAt(tablePem.getSelectedRow(), 0).toString()));
                id.setText(pemesanan.getIdPemesanan().toString());
                date.setDate(pemesanan.getTanggalPemesanan());
                status.setSelectedItem(pemesanan.getStatusPemesanan().toString());
                idcust.setSelectedItem(pemesanan.getIdCustomer().getIdCustomer());
                idpeg.setSelectedItem(pemesanan.getIdPegawai().getIdPegawai());
                save.setText("Update");
            } catch (Exception exception) {} 
    }
        
    public void listCust() {
        dataCustomer = daoCust.getAllData();
        String[] data = new String[dataCustomer.size()];
        for (int i = 0; i < data.length; i++)
            data[i] = ((Customer)dataCustomer.get(i)).getIdCustomer().isEmpty() ? "-" : ((Customer)dataCustomer.get(i)).getIdCustomer(); 
            idcust.setModel(new DefaultComboBoxModel<>(data));
    }
    
      public void listPeg() {
        dataPegawai = daoPeg.getAllData();
        String[] data = new String[dataPegawai.size()];
        for (int i = 0; i < data.length; i++)
            data[i] = ((Pegawai)dataPegawai.get(i)).getIdPegawai().isEmpty() ? "-" : ((Pegawai)dataPegawai.get(i)).getIdPegawai(); 
            idpeg.setModel(new DefaultComboBoxModel<>(data));
    }
}
